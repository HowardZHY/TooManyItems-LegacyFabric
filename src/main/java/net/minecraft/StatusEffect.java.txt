package net.minecraft.entity.effect;

import com.google.common.collect.Maps;
import java.util.Map;
import java.util.UUID;
import net.minecraft.entity.Entity;
import net.minecraft.entity.LivingEntity;
import net.minecraft.entity.attribute.AbstractEntityAttributeContainer;
import net.minecraft.entity.attribute.AttributeModifier;
import net.minecraft.entity.attribute.EntityAttribute;
import net.minecraft.entity.attribute.EntityAttributeInstance;
import net.minecraft.entity.attribute.EntityAttributes;
import net.minecraft.entity.damage.DamageSource;
import net.minecraft.entity.effect.AbsorptionStatusEffect;
import net.minecraft.entity.effect.CombatStatusEffect;
import net.minecraft.entity.effect.HealthBoostStatusEffect;
import net.minecraft.entity.effect.InstantStatusEffect;
import net.minecraft.entity.effect.StatusEffectInstance;
import net.minecraft.entity.effect.StatusEffects;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.util.ChatUtil;
import net.minecraft.util.Identifier;
import net.minecraft.util.math.MathHelper;
import net.minecraft.util.registry.SimpleRegistry;

public class StatusEffect {
    public static final StatusEffect[] potionTypes = new StatusEffect[30];
    public static final SimpleRegistry<Identifier, StatusEffect> REGISTRY = new SimpleRegistry();
    private final Map<EntityAttribute, AttributeModifier> attributeModifiers = Maps.newHashMap();
    private final boolean negative;
    private final int color;
    private String translationKey = "";
    private int field_3159 = -1;
    private double field_3161;
    private boolean field_3162;
    public int id;

    public static StatusEffect byIndex(int index) {
        return (StatusEffect)REGISTRY.getByRawId(index);
    }

    public static int getIndex(StatusEffect statusEffect) {
        return REGISTRY.getRawId((Object)statusEffect);
    }

    public static StatusEffect get(String id) {
        return (StatusEffect)REGISTRY.method_4382((Object)new Identifier(id));
    }

    public static StatusEffect getPotionFromName(String name) {
        Identifier resourcelocation = new Identifier(name);
        if (REGISTRY.method_7336((Object)resourcelocation)) {
            return (StatusEffect)REGISTRY.method_4382((Object)resourcelocation);
        }
        try {
            return (StatusEffect)REGISTRY.getByRawId(Integer.parseInt((String)name));
        }
        catch (NumberFormatException var3) {
            return null;
        }
    }

    public StatusEffect(boolean isBadEffectIn, int liquidColorIn, int potionID) {
        this.id = potionID;
        StatusEffect.potionTypes[potionID] = this;
        this.negative = isBadEffectIn;
        this.field_3161 = isBadEffectIn ? 0.5 : 1.0;
        this.color = liquidColorIn;
    }

    protected StatusEffect method_2440(int p_76399_1_, int p_76399_2_) {
        this.field_3159 = p_76399_1_ + p_76399_2_ * 8;
        return this;
    }

    public void method_6087(LivingEntity entityLivingBaseIn, int p_76394_2_) {
        if (this == StatusEffects.REGENERATION) {
            if (entityLivingBaseIn.getHealth() < entityLivingBaseIn.getMaxHealth()) {
                entityLivingBaseIn.heal(1.0f);
            }
        } else if (this == StatusEffects.POISON) {
            if (entityLivingBaseIn.getHealth() > 1.0f) {
                entityLivingBaseIn.method_2499(DamageSource.MAGIC, 1.0f);
            }
        } else if (this == StatusEffects.WITHER) {
            entityLivingBaseIn.method_2499(DamageSource.WITHER, 1.0f);
        } else if (this == StatusEffects.HUNGER && entityLivingBaseIn instanceof PlayerEntity) {
            ((PlayerEntity)entityLivingBaseIn).addExhaustion(0.025f * (float)(p_76394_2_ + 1));
        } else if (this == StatusEffects.SATURATION && entityLivingBaseIn instanceof PlayerEntity) {
            if (!entityLivingBaseIn.field_3248.isClient) {
                ((PlayerEntity)entityLivingBaseIn).getHungerManager().add(p_76394_2_ + 1, 1.0f);
            }
        } else if (!(this == StatusEffects.INSTANT_HEALTH && !entityLivingBaseIn.isAffectedBySmite() || this == StatusEffects.INSTANT_DAMAGE && entityLivingBaseIn.isAffectedBySmite())) {
            if (this == StatusEffects.INSTANT_DAMAGE && !entityLivingBaseIn.isAffectedBySmite() || this == StatusEffects.INSTANT_HEALTH && entityLivingBaseIn.isAffectedBySmite()) {
                entityLivingBaseIn.method_2499(DamageSource.MAGIC, (float)(6 << p_76394_2_));
            }
        } else {
            entityLivingBaseIn.heal((float)Math.max((int)(4 << p_76394_2_), (int)0));
        }
    }

    public void method_6088(Entity source, Entity indirectSource, LivingEntity entityLivingBaseIn, int amplifier, double health) {
        if (!(this == StatusEffects.INSTANT_HEALTH && !entityLivingBaseIn.isAffectedBySmite() || this == StatusEffects.INSTANT_DAMAGE && entityLivingBaseIn.isAffectedBySmite())) {
            if (this == StatusEffects.INSTANT_DAMAGE && !entityLivingBaseIn.isAffectedBySmite() || this == StatusEffects.INSTANT_HEALTH && entityLivingBaseIn.isAffectedBySmite()) {
                int j = (int)(health * (double)(6 << amplifier) + 0.5);
                if (source == null) {
                    entityLivingBaseIn.method_2499(DamageSource.MAGIC, (float)j);
                } else {
                    entityLivingBaseIn.method_2499(DamageSource.magic((Entity)source, (Entity)indirectSource), (float)j);
                }
            }
        } else {
            int i = (int)(health * (double)(4 << amplifier) + 0.5);
            entityLivingBaseIn.heal((float)i);
        }
    }

    public boolean canApplyUpdateEffect(int duration, int amplifier) {
        if (this == StatusEffects.REGENERATION) {
            int k = 50 >> amplifier;
            return k > 0 ? duration % k == 0 : true;
        }
        if (this == StatusEffects.POISON) {
            int j = 25 >> amplifier;
            return j > 0 ? duration % j == 0 : true;
        }
        if (this == StatusEffects.WITHER) {
            int i = 40 >> amplifier;
            return i > 0 ? duration % i == 0 : true;
        }
        return this == StatusEffects.HUNGER;
    }

    public boolean isInstant() {
        return false;
    }

    public StatusEffect setTranslationKey(String key) {
        this.translationKey = key;
        return this;
    }

    public String getTranslationKey() {
        return this.translationKey;
    }

    public boolean method_2443() {
        return this.field_3159 >= 0;
    }

    public int method_2444() {
        return this.field_3159;
    }

    public boolean isNegative() {
        return this.negative;
    }

    public static String method_2436(StatusEffectInstance p_188410_0_, float p_188410_1_) {
        if (p_188410_0_.isPermanent()) {
            return "**:**";
        }
        int i = MathHelper.floor((float)((float)p_188410_0_.getDuration() * p_188410_1_));
        return ChatUtil.ticksToString((int)i);
    }

    protected StatusEffect method_2434(double effectivenessIn) {
        this.field_3161 = effectivenessIn;
        return this;
    }

    public int getColor() {
        return this.color;
    }

    public StatusEffect addAttribute(EntityAttribute attribute, String uniqueId, double ammount, int operation) {
        AttributeModifier attributemodifier = new AttributeModifier(UUID.fromString((String)uniqueId), this.getTranslationKey(), ammount, operation);
        this.attributeModifiers.put((Object)attribute, (Object)attributemodifier);
        return this;
    }

    public Map<EntityAttribute, AttributeModifier> getAttributeModifiers() {
        return this.attributeModifiers;
    }

    public void onRemoved(LivingEntity entity, AbstractEntityAttributeContainer attributes, int amplifier) {
        for (Map.Entry entry : this.attributeModifiers.entrySet()) {
            EntityAttributeInstance iattributeinstance = attributes.get((EntityAttribute)entry.getKey());
            if (iattributeinstance == null) continue;
            iattributeinstance.method_6193((AttributeModifier)entry.getValue());
        }
    }

    public void method_6091(LivingEntity entity, AbstractEntityAttributeContainer attributes, int amplifier) {
        for (Map.Entry entry : this.attributeModifiers.entrySet()) {
            EntityAttributeInstance iattributeinstance = attributes.get((EntityAttribute)entry.getKey());
            if (iattributeinstance == null) continue;
            AttributeModifier attributemodifier = (AttributeModifier)entry.getValue();
            iattributeinstance.method_6193(attributemodifier);
            iattributeinstance.addModifier(new AttributeModifier(attributemodifier.getId(), this.getTranslationKey() + " " + amplifier, this.adjustModifierAmount(amplifier, attributemodifier), attributemodifier.getOperation()));
        }
    }

    public double adjustModifierAmount(int amplifier, AttributeModifier modifier) {
        return modifier.getAmount() * (double)(amplifier + 1);
    }

    public boolean method_2448() {
        return this.field_3162;
    }

    public StatusEffect method_12944() {
        this.field_3162 = true;
        return this;
    }

    public static void register() {
        REGISTRY.add(1, (Object)new Identifier("speed"), (Object)new StatusEffect(false, 8171462, 1).setTranslationKey("effect.moveSpeed").method_2440(0, 0).addAttribute(EntityAttributes.GENERIC_MOVEMENT_SPEED, "91AEAA56-376B-4498-935B-2F7F68070635", 0.2f, 2).method_12944());
        REGISTRY.add(2, (Object)new Identifier("slowness"), (Object)new StatusEffect(true, 5926017, 2).setTranslationKey("effect.moveSlowdown").method_2440(1, 0).addAttribute(EntityAttributes.GENERIC_MOVEMENT_SPEED, "7107DE5E-7CE8-4030-940E-514C1F160890", -0.15f, 2));
        REGISTRY.add(3, (Object)new Identifier("haste"), (Object)new StatusEffect(false, 14270531, 3).setTranslationKey("effect.digSpeed").method_2440(2, 0).method_2434(1.5).method_12944().addAttribute(EntityAttributes.GENERIC_ATTACK_SPEED, "AF8B6E3F-3328-4C0A-AA36-5BA2BB9DBEF3", 0.1f, 2));
        REGISTRY.add(4, (Object)new Identifier("mining_fatigue"), (Object)new StatusEffect(true, 4866583, 4).setTranslationKey("effect.digSlowDown").method_2440(3, 0).addAttribute(EntityAttributes.GENERIC_ATTACK_SPEED, "55FCED67-E92A-486E-9800-B47F202C4386", -0.1f, 2));
        REGISTRY.add(5, (Object)new Identifier("strength"), (Object)new CombatStatusEffect(false, 9643043, 3.0, 5).setTranslationKey("effect.damageBoost").method_2440(4, 0).addAttribute(EntityAttributes.GENERIC_ATTACK_DAMAGE, "648D7064-6A60-4F59-8ABE-C2C23A6DD7A9", 0.0, 0).method_12944());
        REGISTRY.add(6, (Object)new Identifier("instant_health"), (Object)new InstantStatusEffect(false, 16262179, 6).setTranslationKey("effect.heal").method_12944());
        REGISTRY.add(7, (Object)new Identifier("instant_damage"), (Object)new InstantStatusEffect(true, 4393481, 7).setTranslationKey("effect.harm").method_12944());
        REGISTRY.add(8, (Object)new Identifier("jump_boost"), (Object)new StatusEffect(false, 2293580, 8).setTranslationKey("effect.jump").method_2440(2, 1).method_12944());
        REGISTRY.add(9, (Object)new Identifier("nausea"), (Object)new StatusEffect(true, 5578058, 9).setTranslationKey("effect.confusion").method_2440(3, 1).method_2434(0.25));
        REGISTRY.add(10, (Object)new Identifier("regeneration"), (Object)new StatusEffect(false, 13458603, 10).setTranslationKey("effect.regeneration").method_2440(7, 0).method_2434(0.25).method_12944());
        REGISTRY.add(11, (Object)new Identifier("resistance"), (Object)new StatusEffect(false, 10044730, 11).setTranslationKey("effect.resistance").method_2440(6, 1).method_12944());
        REGISTRY.add(12, (Object)new Identifier("fire_resistance"), (Object)new StatusEffect(false, 14981690, 12).setTranslationKey("effect.fireResistance").method_2440(7, 1).method_12944());
        REGISTRY.add(13, (Object)new Identifier("water_breathing"), (Object)new StatusEffect(false, 3035801, 13).setTranslationKey("effect.waterBreathing").method_2440(0, 2).method_12944());
        REGISTRY.add(14, (Object)new Identifier("invisibility"), (Object)new StatusEffect(false, 8356754, 14).setTranslationKey("effect.invisibility").method_2440(0, 1).method_12944());
        REGISTRY.add(15, (Object)new Identifier("blindness"), (Object)new StatusEffect(true, 2039587, 15).setTranslationKey("effect.blindness").method_2440(5, 1).method_2434(0.25));
        REGISTRY.add(16, (Object)new Identifier("night_vision"), (Object)new StatusEffect(false, 0x1F1FA1, 16).setTranslationKey("effect.nightVision").method_2440(4, 1).method_12944());
        REGISTRY.add(17, (Object)new Identifier("hunger"), (Object)new StatusEffect(true, 5797459, 17).setTranslationKey("effect.hunger").method_2440(1, 1));
        REGISTRY.add(18, (Object)new Identifier("weakness"), (Object)new CombatStatusEffect(true, 0x484D48, -4.0, 18).setTranslationKey("effect.weakness").method_2440(5, 0).addAttribute(EntityAttributes.GENERIC_ATTACK_DAMAGE, "22653B89-116E-49DC-9B6B-9971489B5BE5", 0.0, 0));
        REGISTRY.add(19, (Object)new Identifier("poison"), (Object)new StatusEffect(true, 5149489, 19).setTranslationKey("effect.poison").method_2440(6, 0).method_2434(0.25));
        REGISTRY.add(20, (Object)new Identifier("wither"), (Object)new StatusEffect(true, 3484199, 20).setTranslationKey("effect.wither").method_2440(1, 2).method_2434(0.25));
        REGISTRY.add(21, (Object)new Identifier("health_boost"), (Object)new HealthBoostStatusEffect(false, 16284963, 21).setTranslationKey("effect.healthBoost").method_2440(7, 2).addAttribute(EntityAttributes.GENERIC_MAX_HEALTH, "5D6F0BA2-1186-46AC-B896-C61C5CEE99CC", 4.0, 0).method_12944());
        REGISTRY.add(22, (Object)new Identifier("absorption"), (Object)new AbsorptionStatusEffect(false, 0x2552A5, 22).setTranslationKey("effect.absorption").method_2440(2, 2).method_12944());
        REGISTRY.add(23, (Object)new Identifier("saturation"), (Object)new InstantStatusEffect(false, 16262179, 23).setTranslationKey("effect.saturation").method_12944());
        REGISTRY.add(24, (Object)new Identifier("glowing"), (Object)new StatusEffect(false, 9740385, 24).setTranslationKey("effect.glowing").method_2440(4, 2));
        REGISTRY.add(25, (Object)new Identifier("levitation"), (Object)new StatusEffect(true, 0xCEFFFF, 25).setTranslationKey("effect.levitation").method_2440(3, 2));
        REGISTRY.add(26, (Object)new Identifier("luck"), (Object)new StatusEffect(false, 0x339900, 26).setTranslationKey("effect.luck").method_2440(5, 2).method_12944().addAttribute(EntityAttributes.GENERIC_LUCK, "03C3C89D-7037-4B42-869F-B146BCB64D2E", 1.0, 0));
        REGISTRY.add(27, (Object)new Identifier("unluck"), (Object)new StatusEffect(true, 12624973, 27).setTranslationKey("effect.unluck").method_2440(6, 2).addAttribute(EntityAttributes.GENERIC_LUCK, "CC5AF142-2BD2-4215-B636-2605AED11727", -1.0, 0));
    }
}